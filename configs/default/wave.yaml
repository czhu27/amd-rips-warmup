#############
#  Dataset  #
#############
#source: wave_with_source
source: wave
data_dir: data/wave
data_run: fine_mesh_gauss_few

corners: false
dataset: [2500, 7500, 0, 1.0, 0.0] #[interior, exterior, border, labeled_int%, labeled_ext%]
noise: 0.0

# make sure data_sources correspond with files in data_run
# also make sure data_sources is list of points
#data_sources: [[0.5, 0.5], [0.9, 0.1], [0.25, 0.75]]
#data_run: [05-05, 09-01, 025-075]

# test_source and test_data_dir only matter for error calculation and prediction plots
# test_source: [0.6, 0.6]
# test_data_dir: data/wave/06-06/

###########
#  Model  #
###########
activation: tanh
dropout_rates: 0.0
layers: [3, 100, 100, 100, 100, 100, 3]
model_outputs: all

##############
#  Training  #
##############
device: gpu
trials: 1
seed: 0
epochs: 2000
batch_size: 1024

lr: 1.0e-4
lr_scheduler: true
lr_scheduler_type: piecewise_linear
lr_scheduler_params: [1.0e-3, 1.0e-4, 2000, 2400] #[initial, final, start_epoch, end_epoch]

gd_noise: 0.0
from_tensor_slices: true
shuffle: true

##################
#  Regularizers  #
##################
regularizer: none
reg_const: 1.0
gradient_loss: 
  - region: boundary_lr     # which data to apply to
    name: velocity_lr       # id of gradient regularizer
    weight: [0.0, 0.03]     # start_weight, end_weight
    schedule: [200, 500]    # start_epoch,  end_epoch
  - region: boundary_ud   
    name: velocity_ud     
    weight: [0.0, 0.03]    
    schedule: [200, 500]  
  - region: interior
    name: first_explicit     
    weight: [0.0, 0.03]    
    schedule: [600, 1000]  
  - region: interior
    name: second_explicit     
    weight: [0.0, 0.01]    
    schedule: [1100, 1400]  
  - region: interior
    name: second_curl     
    weight: [0.0, 0.01]    
    schedule: [1500, 1800]  

grad_reg_const: 1
loss_schedulerizer: true
loss_schedulerizer_params: [2000, 2400] #[Begin adding grad, fully added]

#############
#  Logging  #
#############
debug: false
output_dir: null   # overridden in main.py
output_root: output/wave
plots: [extrapolation, data-distribution, tensorboard, extrapolation_wave, heatmap]
saves: [model]
tb_error_timestep: 100
tb_loss_timestep: 5